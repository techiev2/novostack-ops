#!/bin/bash
opsRoot=$(realpath $0 | xargs dirname | xargs dirname)
appsRoot=$(dirname $opsRoot)

killExistingContainer() {
  tmux kill-session -t "$1"
}

runContainer() {
  svc="$1"
  cmd="$2"
  session="service-$1"
  [[ ! -z $(tmux ls | grep "service-$1") ]] && killExistingContainer "$session"
  tmux new-session -d -s "$session";
  tmux send "cd $appsRoot/$svc; $cmd" ENTER
}

startServiceInContainer() {
  [[ -z $1 ]] && echo -e "No service name provided" && return 1
  echo -e "Attempting to start $1 in container"
  runner=""
  [[ -f "$appsRoot/$1/package.json" ]] && pkgJSON=$(cat "$appsRoot/$1/package.json") || pkgJSON=""
  [[ $(echo $pkgJSON | jq '.scripts."service:watch"') != "null" ]] && runner="npm run service:watch"
  [[ $(echo $pkgJSON | jq '.scripts.dev') != "null" ]] && runner="npm run dev"
  [[ ! -f "$appsRoot/$1/package.json" ]] && [[ -f "$appsRoot/$1/main.go" ]] && runner="go run main.go"
  [[ -z $runner ]] && echo -e "No valid runner script registered in ${svc}" && return 1
  runContainer "$1" "$runner"
  return 0
}
startAllServicesInContainer() {
  echo -e "Starting all services"
  for svc in $(ls $appsRoot); do
    [[ -d "$appsRoot/$svc" ]] && [[ -f "$appsRoot/$svc/configs.json" ]] || [[ -f "$appsRoot/$svc/main.go" ]] && startServiceInContainer "$svc"
  done
}

[[ ! -z $1 ]] && startServiceInContainer $1 && exit $?
startAllServicesInContainer